1、索引会影响到where后面的查找和order by后面的排序。

2、top、free、iostat、vmstat查看系统性能。

3、新建了联合索引 a_b_c ，如果在查询时按照a、b、c的顺序编写sql语句，如果a和c都用到了索引，但b是范围查询时会导致索引失效
此时在sql语句不变的情况下做法为重新建立一个a_c的联合索引。

4、新建了联合索引 a_b_c ，查询时要想使用该联合索引，查询条件a必须存在才可以，a、a_b、a_b_c这3种情况均使用到索引，但是a_c只用到a那部分的索引，不是最优的sql。
而 c_b_a、a_c_b 和 b_a_c 这些顺序也用到了所有索引，因为mysql底层的自动优化机制。
而 a b>2 c 用到了两个索引，a b c>2 和 a c>2 b 和 c>2 a b 均用到了3个索引。
而 a order by b c 这种情况下用到了a索引来进行查找，用到了b索引来排序，c索引没有用到。
而 a order by c 这种情况下值用到了a索引，出现filesort，因为b索引没有用上衔接不上了。

5、两个表左连接查询LEFT JOIN时应该将索引建立在右表上，3个表查询时也是一样的做法，以提升性能。

6、减少NestedLoop的循环次数，永远使用小结果集驱动大结果集，内存充足的情况下可以增加JoinBuffer的大小。

7、有%时尽量将%写在右边，如果避免不了必须在两边写%的话，为了避免索引失效，可以使用覆盖索引来解决。如下：
新建了索引a_b，在查询时使用：select a,b from table where name like %包含有a列和b列的内容%;
select * 和 select a,b,c 均会使索引失效。
建立了联合索引 a_b_c ，语句：select * from table where a='zs' and b like 'lisi%' and c='ww' 使用到了3个索引

8、字符串类型必须加单引号，不加虽然也可以查出来，但是mysql底层会自动转换，但是索引会失效。